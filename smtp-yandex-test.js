#!/usr/bin/env node

/**
 * –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—ã
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node smtp-yandex-test.js
 */

const nodemailer = require('nodemailer');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function ask(question) {
  return new Promise(resolve => {
    rl.question(question, resolve);
  });
}

async function testSmtpConnection() {
  console.log('üîß –¢–µ—Å—Ç SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç–µ\n');

  try {
    // –ü–æ–ª—É—á–∞–µ–º credentials –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const smtpUser = await ask('–í–≤–µ–¥–∏—Ç–µ email (example@yandex.ru): ');
    const smtpPass = await ask('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ');

    console.log('\nüìã –ê–Ω–∞–ª–∏–∑ credentials:');
    console.log(`Email: ${smtpUser}`);
    console.log(`Email –¥–ª–∏–Ω–∞: ${smtpUser.length}`);
    console.log(`Email –¥–æ–º–µ–Ω: ${smtpUser.includes('@') ? smtpUser.split('@')[1] : '–ù–ï–¢ –î–û–ú–ï–ù–ê'}`);
    console.log(`Email - –Ø–Ω–¥–µ–∫—Å: ${smtpUser.includes('@yandex.') || smtpUser.includes('@ya.ru') ? '–î–ê' : '–ù–ï–¢'}`);
    console.log(`–ü–∞—Ä–æ–ª—å –¥–ª–∏–Ω–∞: ${smtpPass.length}`);
    console.log(`–ü–∞—Ä–æ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª—ã: ${smtpPass.includes(' ') ? '–î–ê (–ü–†–û–ë–õ–ï–ú–ê!)' : '–ù–ï–¢'}`);
    console.log(`–ü–∞—Ä–æ–ª—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "app": ${smtpPass.startsWith('app') ? '–î–ê' : '–ù–ï–¢'}`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∏
    const warnings = [];
    if (!smtpUser.includes('@')) warnings.push('‚ùå Email –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç @');
    if (!(smtpUser.includes('@yandex.') || smtpUser.includes('@ya.ru'))) {
      warnings.push('‚ùå Email –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –Ø–Ω–¥–µ–∫—Å—É');
    }
    if (smtpPass.includes(' ')) warnings.push('‚ùå –ü–∞—Ä–æ–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª—ã');
    if (smtpPass.length < 10) warnings.push('‚ùå –ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π');

    if (warnings.length > 0) {
      console.log('\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      warnings.forEach(w => console.log(w));
    }

    console.log('\nüîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ smtp.yandex.ru:465...');

    // –°–æ–∑–¥–∞—ë–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    const transporter = nodemailer.createTransport({
      host: 'smtp.yandex.ru',
      port: 465,
      secure: true,
      auth: {
        user: smtpUser,
        pass: smtpPass,
      },
      debug: false,
      logger: false,
    });

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await transporter.verify();

    console.log('‚úÖ –£–°–ü–ï–•! SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('\nüìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ...');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
    const testEmail = {
      from: smtpUser,
      to: smtpUser, // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–æ–º—É —Å–µ–±–µ
      subject: 'üß™ –¢–µ—Å—Ç SMTP - BOTTLE CODE',
      text: `–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${new Date().toLocaleString()}`,
      html: `
        <h2>‚úÖ –¢–µ—Å—Ç SMTP —É—Å–ø–µ—à–µ–Ω!</h2>
        <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ SMTP –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>
        <p><strong>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong> ${new Date().toLocaleString()}</p>
        <p><strong>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç:</strong> BOTTLE CODE Landing Test</p>
      `
    };

    const result = await transporter.sendMail(testEmail);
    console.log('üì¨ –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`Message ID: ${result.messageId}`);

    console.log('\nüéâ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢! –ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ credentials –≤ production');

  } catch (error) {
    console.log('\n‚ùå –û–®–ò–ë–ö–ê SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:');
    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.code) console.log(`–ö–æ–¥ –æ—à–∏–±–∫–∏: ${error.code}`);
    if (error.response) console.log(`–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${error.response}`);

    console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:');
    
    if (error.message.includes('authentication failed') || error.message.includes('Invalid user or password')) {
      console.log('1. üîë –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è "–ü–æ—á—Ç–∞" –≤ –Ø–Ω–¥–µ–∫—Å.–ü–∞—Å–ø–æ—Ä—Ç');
      console.log('2. ‚úÖ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤–∫–ª—é—á–µ–Ω–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è');
      console.log('3. üìß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email –∞–¥—Ä–µ—Å–∞');
      console.log('4. üåê –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–π—Ç–∏ –≤ –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—É —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä');
      console.log('5. üö´ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    } else if (error.message.includes('ENOTFOUND') || error.message.includes('ECONNREFUSED')) {
      console.log('1. üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
      console.log('2. üõ°Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–π—Ä–≤–æ–ª–∞/–∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞');
      console.log('3. üîå –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç 465 –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('1. üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç');
      console.log('2. üìû –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ø–Ω–¥–µ–∫—Å');
    }

    console.log('\nüìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/YANDEX-SMTP-TROUBLESHOOTING.md');
  } finally {
    rl.close();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSmtpConnection().catch(console.error);
